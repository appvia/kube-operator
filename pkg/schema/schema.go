
/*
 * Copyright (C) 2019 Rohith Jayawardene <gambol99@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Code generated by go generate; DO NOT EDIT.
// This file was generated by github.com/appvia/hub-apis/cmd/schema-gen

package schema

import (
	"bytes"
	"encoding/json"
	"strings"

	apiextensions "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"

	yaml "github.com/ghodss/yaml"
)

var (
	// Schema is the openapi schema
	Schema = `
definitions:
  NamespaceClaim:
    description: NamespaceClaim is the Schema for the namespaceclaims API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
        type: string
      metadata:
        type: object
      spec:
        description: NamespaceClaimSpec defines the desired state of NamespaceClaim
        properties:
          annotations:
            additionalProperties:
              type: string
            description: Annotations is a series of annotations on the namespace
            type: object
          labels:
            additionalProperties:
              type: string
            description: Labels is a series of labels for the namespace
            type: object
          name:
            description: Name is the name of the namespace to create
            type: string
          use:
            description: Use is the owner of the namespace i.e. the cluster
            properties:
              group:
                description: Group is the api group
                type: string
              kind:
                description: Kind is the name of the resource under the group
                type: string
              name:
                description: Name is name of the resource
                type: string
              namespace:
                description: Namespace is the location of the object
                type: string
              version:
                description: Version is the group version
                type: string
            required:
            - group
            - kind
            - name
            - namespace
            - version
            type: object
        required:
        - annotations
        - labels
        - name
        - use
        type: object
      status:
        description: NamespaceClaimStatus defines the observed state of NamespaceClaim
        properties:
          conditions:
            description: Conditions is a series of things that caused the failure
              if any
            items:
              description: Condition is a reason why something failed
              properties:
                code:
                  description: Code is machine readable code of the error type
                  type: integer
                detail:
                  description: Detail is a actual error which might contain technical
                    reference
                  type: string
                message:
                  description: Message is a human readable message
                  type: string
              required:
              - code
              - detail
              - message
              type: object
            type: array
          phase:
            description: Phase is used to hold the current phase of the resource
            type: string
          status:
            description: Status is the status of the namespace
            type: string
        required:
        - conditions
        - phase
        - status
        type: object
    type: object
`

	// CustomResourceDefinitions are the custom resources types
	CustomResourceDefinitions = `
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: namespaceclaims.kube.hub.appvia.io
spec:
  group: kube.hub.appvia.io
  names:
    kind: NamespaceClaim
    listKind: NamespaceClaimList
    plural: namespaceclaims
    singular: namespaceclaim
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NamespaceClaim is the Schema for the namespaceclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NamespaceClaimSpec defines the desired state of NamespaceClaim
          properties:
            annotations:
              additionalProperties:
                type: string
              description: Annotations is a series of annotations on the namespace
              type: object
            labels:
              additionalProperties:
                type: string
              description: Labels is a series of labels for the namespace
              type: object
            name:
              description: Name is the name of the namespace to create
              type: string
            use:
              description: Use is the owner of the namespace i.e. the cluster
              properties:
                group:
                  description: Group is the api group
                  type: string
                kind:
                  description: Kind is the name of the resource under the group
                  type: string
                name:
                  description: Name is name of the resource
                  type: string
                namespace:
                  description: Namespace is the location of the object
                  type: string
                version:
                  description: Version is the group version
                  type: string
              required:
              - group
              - kind
              - name
              - namespace
              - version
              type: object
          required:
          - annotations
          - labels
          - name
          - use
          type: object
        status:
          description: NamespaceClaimStatus defines the observed state of NamespaceClaim
          properties:
            conditions:
              description: Conditions is a series of things that caused the failure
                if any
              items:
                description: Condition is a reason why something failed
                properties:
                  code:
                    description: Code is machine readable code of the error type
                    type: integer
                  detail:
                    description: Detail is a actual error which might contain technical
                      reference
                    type: string
                  message:
                    description: Message is a human readable message
                    type: string
                required:
                - code
                - detail
                - message
                type: object
              type: array
            phase:
              description: Phase is used to hold the current phase of the resource
              type: string
            status:
              description: Status is the status of the namespace
              type: string
          required:
          - conditions
          - phase
          - status
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
`
)

// ConvertToJSON converts the CRD defitions into a swagger manifest
func ConvertToJSON() apiextensions.JSON {
	encoded, err := yaml.YAMLToJSON([]byte(Schema))
	if err != nil {
		panic("invalid crd schema")
	}

	return apiextensions.JSON{Raw: encoded}
}

// GetCustomResourceDefinitions returns all the CRDs for registation
func GetCustomResourceDefinitions() []*apiextensions.CustomResourceDefinition{
	var list []*apiextensions.CustomResourceDefinition

	for _, document := range strings.Split(CustomResourceDefinitions, "---") {
		decoded, err := yaml.YAMLToJSON([]byte(document))
		if err != nil {
			panic("failed to parse the custom resource definition")
		}

		crd := &apiextensions.CustomResourceDefinition{}
		if err := json.NewDecoder(bytes.NewReader(decoded)).Decode(crd); err != nil {
			panic("failed to parse the custom resource definition yaml")
		}

		list = append(list, crd)
	}

	return list
}

